CREATE DATABASE music_linker CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

CREATE USER 'emanresu'@'%' IDENTIFIED BY 'drowssap';
GRANT INSERT, DELETE, UPDATE, SELECT ON music_linker.* TO 'emanresu'@'%';
FLUSH PRIVILEGES;

USE music_linker;

CREATE TABLE QRTZ_JOB_DETAILS
(
    SCHED_NAME        VARCHAR(120) NOT NULL,
    JOB_NAME          VARCHAR(190) NOT NULL,
    JOB_GROUP         VARCHAR(190) NOT NULL,
    DESCRIPTION       VARCHAR(250) NULL,
    JOB_CLASS_NAME    VARCHAR(250) NOT NULL,
    IS_DURABLE        VARCHAR(1)   NOT NULL,
    IS_NONCONCURRENT  VARCHAR(1)   NOT NULL,
    IS_UPDATE_DATA    VARCHAR(1)   NOT NULL,
    REQUESTS_RECOVERY VARCHAR(1)   NOT NULL,
    JOB_DATA          BLOB         NULL,
    PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_TRIGGERS
(
    SCHED_NAME     VARCHAR(120) NOT NULL,
    TRIGGER_NAME   VARCHAR(190) NOT NULL,
    TRIGGER_GROUP  VARCHAR(190) NOT NULL,
    JOB_NAME       VARCHAR(190) NOT NULL,
    JOB_GROUP      VARCHAR(190) NOT NULL,
    DESCRIPTION    VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT(13)   NULL,
    PREV_FIRE_TIME BIGINT(13)   NULL,
    PRIORITY       INTEGER      NULL,
    TRIGGER_STATE  VARCHAR(16)  NOT NULL,
    TRIGGER_TYPE   VARCHAR(8)   NOT NULL,
    START_TIME     BIGINT(13)   NOT NULL,
    END_TIME       BIGINT(13)   NULL,
    CALENDAR_NAME  VARCHAR(190) NULL,
    MISFIRE_INSTR  SMALLINT(2)  NULL,
    JOB_DATA       BLOB         NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
        REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_SIMPLE_TRIGGERS
(
    SCHED_NAME      VARCHAR(120) NOT NULL,
    TRIGGER_NAME    VARCHAR(190) NOT NULL,
    TRIGGER_GROUP   VARCHAR(190) NOT NULL,
    REPEAT_COUNT    BIGINT(7)    NOT NULL,
    REPEAT_INTERVAL BIGINT(12)   NOT NULL,
    TIMES_TRIGGERED BIGINT(10)   NOT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_CRON_TRIGGERS
(
    SCHED_NAME      VARCHAR(120) NOT NULL,
    TRIGGER_NAME    VARCHAR(190) NOT NULL,
    TRIGGER_GROUP   VARCHAR(190) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID    VARCHAR(80),
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_SIMPROP_TRIGGERS
(
    SCHED_NAME    VARCHAR(120)   NOT NULL,
    TRIGGER_NAME  VARCHAR(190)   NOT NULL,
    TRIGGER_GROUP VARCHAR(190)   NOT NULL,
    STR_PROP_1    VARCHAR(512)   NULL,
    STR_PROP_2    VARCHAR(512)   NULL,
    STR_PROP_3    VARCHAR(512)   NULL,
    INT_PROP_1    INT            NULL,
    INT_PROP_2    INT            NULL,
    LONG_PROP_1   BIGINT         NULL,
    LONG_PROP_2   BIGINT         NULL,
    DEC_PROP_1    NUMERIC(13, 4) NULL,
    DEC_PROP_2    NUMERIC(13, 4) NULL,
    BOOL_PROP_1   VARCHAR(1)     NULL,
    BOOL_PROP_2   VARCHAR(1)     NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_BLOB_TRIGGERS
(
    SCHED_NAME    VARCHAR(120) NOT NULL,
    TRIGGER_NAME  VARCHAR(190) NOT NULL,
    TRIGGER_GROUP VARCHAR(190) NOT NULL,
    BLOB_DATA     BLOB         NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    INDEX (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_CALENDARS
(
    SCHED_NAME    VARCHAR(120) NOT NULL,
    CALENDAR_NAME VARCHAR(190) NOT NULL,
    CALENDAR      BLOB         NOT NULL,
    PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS
(
    SCHED_NAME    VARCHAR(120) NOT NULL,
    TRIGGER_GROUP VARCHAR(190) NOT NULL,
    PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_FIRED_TRIGGERS
(
    SCHED_NAME        VARCHAR(120) NOT NULL,
    ENTRY_ID          VARCHAR(95)  NOT NULL,
    TRIGGER_NAME      VARCHAR(190) NOT NULL,
    TRIGGER_GROUP     VARCHAR(190) NOT NULL,
    INSTANCE_NAME     VARCHAR(190) NOT NULL,
    FIRED_TIME        BIGINT(13)   NOT NULL,
    SCHED_TIME        BIGINT(13)   NOT NULL,
    PRIORITY          INTEGER      NOT NULL,
    STATE             VARCHAR(16)  NOT NULL,
    JOB_NAME          VARCHAR(190) NULL,
    JOB_GROUP         VARCHAR(190) NULL,
    IS_NONCONCURRENT  VARCHAR(1)   NULL,
    REQUESTS_RECOVERY VARCHAR(1)   NULL,
    PRIMARY KEY (SCHED_NAME, ENTRY_ID)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_SCHEDULER_STATE
(
    SCHED_NAME        VARCHAR(120) NOT NULL,
    INSTANCE_NAME     VARCHAR(190) NOT NULL,
    LAST_CHECKIN_TIME BIGINT(13)   NOT NULL,
    CHECKIN_INTERVAL  BIGINT(13)   NOT NULL,
    PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
) ENGINE = InnoDB;

CREATE TABLE QRTZ_LOCKS
(
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40)  NOT NULL,
    PRIMARY KEY (SCHED_NAME, LOCK_NAME)
) ENGINE = InnoDB;

CREATE
    INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS (SCHED_NAME, REQUESTS_RECOVERY);
CREATE
    INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS (SCHED_NAME, JOB_GROUP);

CREATE
    INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);
CREATE
    INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS (SCHED_NAME, JOB_GROUP);
CREATE
    INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS (SCHED_NAME, CALENDAR_NAME);
CREATE
    INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);
CREATE
    INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE);
CREATE
    INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);
CREATE
    INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);
CREATE
    INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS (SCHED_NAME, NEXT_FIRE_TIME);
CREATE
    INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);
CREATE
    INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);
CREATE
    INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);
CREATE
    INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP,
                                                          TRIGGER_STATE);

CREATE
    INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME);
CREATE
    INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);
CREATE
    INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);
CREATE
    INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_GROUP);
CREATE
    INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
CREATE
    INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);

CREATE TABLE country
(
    id                 BIGINT       NOT NULL AUTO_INCREMENT COMMENT 'row id',
    country_code       CHAR(2)      NOT NULL COMMENT 'country code',
    en_name            VARCHAR(128) NOT NULL COMMENT 'name of english',
    local_name         VARCHAR(128) NOT NULL COMMENT 'name of native language',
    phone_code         VARCHAR(8)   NOT NULL COMMENT 'phone code',
    phone_pattern      VARCHAR(16)  NOT NULL COMMENT 'telephone number regex pattern',
    created_date       TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    UNIQUE KEY uk_cc (country_code) COMMENT 'unique of country code',
    UNIQUE KEY uk_pc (phone_code) COMMENT 'unique of phone code'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'country code and phone code';

CREATE TABLE user
(
    id                 BIGINT      NOT NULL AUTO_INCREMENT COMMENT 'row id',
    country_id         BIGINT      NOT NULL COMMENT 'country code reference',
    tel_no             VARCHAR(15) NOT NULL COMMENT 'user telephone number',
    password           CHAR(60)    NOT NULL COMMENT 'user login password with bCrypt',
    enable             BOOLEAN     NOT NULL DEFAULT TRUE COMMENT 'user account is enable or not',
    nickname           VARCHAR(16) NOT NULL COMMENT 'user nickname',
    gender             TINYINT     NOT NULL COMMENT 'user gender, 0 is unknown, 1 is male, 2 is female',
    avatar             VARCHAR(48) NOT NULL COMMENT 'user avatar, minio path',
    created_date       TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_ui_ci (country_id) REFERENCES country (id),
    UNIQUE KEY uk_ui_ci_tn (country_id, tel_no) COMMENT 'unique of telephone number'
)
    AUTO_INCREMENT = 10001
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'user info';

CREATE TABLE role
(
    id                 BIGINT      NOT NULL AUTO_INCREMENT COMMENT 'row id',
    role_name          VARCHAR(32) NOT NULL COMMENT 'role name',
    created_date       TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'role';

CREATE TABLE user_role
(
    id                 BIGINT    NOT NULL AUTO_INCREMENT COMMENT 'row id',
    user_id            BIGINT    NOT NULL COMMENT 'user id',
    role_id            BIGINT    NOT NULL COMMENT 'role id',
    created_date       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_ur_ui (user_id) REFERENCES user (id),
    FOREIGN KEY fk_ur_ri (role_id) REFERENCES role (id),
    UNIQUE KEY uk_ur_ui_ri (user_id, role_id) COMMENT 'unique of user id and role id'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'user role';

CREATE TABLE trust_device
(
    id                 BIGINT       NOT NULL AUTO_INCREMENT COMMENT 'row id',
    user_id            BIGINT       NOT NULL COMMENT 'user id',
    device_no          VARCHAR(128) NOT NULL COMMENT 'device serial number',
    created_date       TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_td_ui (user_id) REFERENCES user (id),
    UNIQUE KEY uk_td_ui_dn (user_id, device_no) COMMENT 'unique of user id and device no'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'user trust device';

CREATE TABLE singer
(
    id                 BIGINT        NOT NULL AUTO_INCREMENT COMMENT 'row id',
    name               VARCHAR(64)   NOT NULL COMMENT 'singer name',
    gender             TINYINT       NOT NULL COMMENT 'singer gender, 0 is unknown, 1 is male, 2 is female',
    img                VARCHAR(48)   NOT NULL COMMENT 'singer img, minio path',
    brief              VARCHAR(1024) NOT NULL COMMENT 'singer brief',
    created_date       TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'singer';

CREATE TABLE music
(
    id                 BIGINT      NOT NULL AUTO_INCREMENT COMMENT 'row id',
    file               VARCHAR(48) NOT NULL COMMENT 'music file, minio path',
    name               VARCHAR(64) NOT NULL COMMENT 'music name',
    singer_id          BIGINT      NOT NULL COMMENT 'singer of music',
    created_date       TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_m_si (singer_id) REFERENCES singer (id)
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'music';

CREATE TABLE lyric
(
    id                 BIGINT        NOT NULL AUTO_INCREMENT COMMENT 'row id',
    music_id           BIGINT        NOT NULL COMMENT 'music id',
    offset_milli       BIGINT        NOT NULL COMMENT 'lyric line start millisecond',
    line               VARCHAR(1024) NOT NULL COMMENT 'lyric line',
    created_date       TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP     NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_mu_mi (music_id) REFERENCES music (id)
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'lyric';

CREATE TABLE music_upload
(
    id                 BIGINT    NOT NULL AUTO_INCREMENT COMMENT 'row id',
    user_id            BIGINT    NOT NULL COMMENT 'uploaded user id',
    music_id           BIGINT    NOT NULL COMMENT 'music id',
    created_date       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row created date',
    last_modified_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'row last modified date',
    PRIMARY KEY pk_i (id) COMMENT 'row primary key',
    FOREIGN KEY fk_mu_ui (user_id) REFERENCES user (id),
    FOREIGN KEY fk_mu_mi (music_id) REFERENCES music (id),
    UNIQUE KEY uk_mu_ui_mi (user_id, music_id) COMMENT 'unique of user id and music id'
)
    ENGINE = InnoDB
    CHARACTER SET = utf8mb4
    COLLATE = utf8mb4_unicode_ci
    COMMENT = 'music upload';
